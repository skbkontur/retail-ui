@import '../variables.less';

:local {
  @focus-shadow: 0 0 0 1px @border-color-focus,
    inset 0 0 0 1px @border-color-gray-lighter;

  .wrap {
    box-sizing: border-box;
    display: inline-block;
    padding: 1px;
  }

  .root {
    border: 0;
    color: @text-color-default;
    cursor: pointer;
    display: inline-block;
    font-family: inherit;
    font-size: 14px;
    margin: 0; // Need for Safari.
    outline: 0;
    overflow: visible; // On IE it's hidden by default.
    position: relative;
    width: 100%;

    &::-moz-focus-inner {
      border: 0;
      padding: 0;
    }
  }

  .caption {
    position: relative;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }

  .icon {
    display: inline-block;
    padding-right: 7px;
  }

  .arrow {

  }

  .fallbackMixin(@class; @bg; @border: @bg) {
    //:global(.rt-ie8),
    //:global(.rt-ie9) {
    //  .@{class},
    //  .@{class}:hover,
    //  .@{class}:active  {
    //    background: @bg;
    //    box-shadow: none;
    //    outline: 1px solid @border;
    //  }
    //
    //  .@{class}:focus {
    //    &:before {
    //      border: 1px solid #fff;
    //      bottom: 0;
    //      content: '';
    //      left: 0;
    //      outline: 2px solid @border-color-focus;
    //      position: absolute;
    //      right: 0;
    //      top: 0;
    //    }
    //  }
    //}
  }

  .focusMixin(@className) {
    .@{className}:focus {
      box-shadow:
        inset 0 0 0 1px #FFFFFF,
        0 0 0 2px @border-color-focus;
      position: relative;
      z-index: 2;

      .arrow {
        box-shadow:
          inset -1px 1px 0 0 #FFFFFF,
          2px -2px 0 0 @border-color-focus;
      }
    }

    :global(.rt-ie9),
    :global(.rt-ie8) {
      .@{className}:focus {
        box-shadow: none
      }
    }
  }

  .arrowSizeMixin(@className, @length, @top, @right, @shift, @transform, @arrow_loading) {
    .@{className} {
      .arrow,
      .arrowLoading {
        position: absolute;
        top: @top;
        right: @right;
        height: @length;
        width: @length;
        transform: @transform;//rotate(53deg) skewX(24deg) skewY(10deg);
        border-radius: 2px 2px 2px 16px;
        box-sizing: border-box;
      }

      .arrowLoading {
        overflow: hidden;

        &:before {
          background: @arrow_loading;
          content: '';
          height: 265%;
          position: absolute;
          opacity: .3;

          background-size: 68px 100%;
          top: 0px;
          left: -170px;
          right: -50px;
          :global {
            animation: btn_loading_arrow 1.4s linear infinite;
          }
          transform: rotate(-45.4deg) skewX(0deg) skewY(0deg);
        }
      }
    }

    :global(.rt-ie9),
    :global(.rt-ie8) {
      .@{className} {
        .arrow {
          height: 0;
          width: 0;
        }
      }
    }
  }

  .arrowColorMixin(@className, @hoverColorStart, @hoverColorEnd, @hoverShadow, @colorStart, @colorEnd, @shadow, @bg, @border: @bg) {
    .@{className} {
      &:hover {
        .arrow {
          background-image: linear-gradient(
            to bottom right,
            @hoverColorStart,
            @hoverColorEnd
          );
          box-shadow: @hoverShadow;
        }
      }
      .arrow {
        background-image: linear-gradient(
          to bottom right,
          @colorStart,
          @colorEnd
        );
        box-shadow: @shadow;
      }
    }

    :global(.rt-ie8),
    :global(.rt-ie9) {
      .@{className},
      .@{className}:hover,
      .@{className}:active  {
        background: @bg;
        box-shadow: none;
        outline: 1px solid @border;
      }

      .@{className}:focus {
        &:before {
          border: 1px solid #fff;
          bottom: 0;
          content: '';
          left: 0;
          outline: 2px solid @border-color-focus;
          position: absolute;
          right: 0;
          top: 0;
        }
      }
    }
  }

  .sizeSmall {
    height: 32px;
    line-height: 32px;
    padding: 0 15px;
  }
  .arrowSizeMixin(sizeSmall, 16.8px, 7.5px, -7.5px, -7.7px,
                  rotate(53deg) skewX(24deg) skewY(10deg),
                  linear-gradient(-44deg, transparent 46.5%, #ccc 0, #ccc 73.5%, transparent 0));

  .sizeMedium {
    height: 38px;
    line-height: 38px;
    padding: 0 15px;
  }
  .arrowSizeMixin(sizeMedium, 20.2px, 8.9px, -9.3px, -9.5px,
                  rotate(53deg) skewX(24deg) skewY(8deg),
                  linear-gradient(-44deg, transparent 44.5%, #ccc 0, #ccc 71.3%, transparent 0));

  .sizeLarge {
    font-size: 16px;
    height: 42px;
    line-height: 42px;
    padding: 0 20px;
  }
  .arrowSizeMixin(sizeLarge, 21.7px, 10.2px, -10px, -10.2px,
                  rotate(53deg) skewX(25deg) skewY(10deg),
                  linear-gradient(-44deg, transparent 44.2%, #ccc 0, #ccc 70.4%, transparent 0));

  .deprecated_sizeDefault {
    height: 28px;
    line-height: 28px;
    padding: 0 10px;
  }
  .arrowSizeMixin(deprecated_sizeDefault, 14.4px, 7px, -6.5px, -6.7px,
                  rotate(53deg) skewX(24deg) skewY(10deg),
                  linear-gradient(-44deg, transparent 44.5%, #ccc 0, #ccc 71.3%, transparent 0));

  .deprecated_sizeLarge {
    height: 34px;
    line-height: 34px;
    padding: 0 20px;
  }
  .arrowSizeMixin(deprecated_sizeLarge, 17.7px, 8.3px, -8.1px, -8.3px,
                  rotate(53deg) skewX(24deg) skewY(10deg),
                  linear-gradient(-44deg, transparent 44.5%, #ccc 0, #ccc 71.3%, transparent 0));

  .buttonWithIcon {
    padding-right: 15px;
    padding-left: 15px;
  }

  .arrowButton {
    &:after {
      content: '';
    }
  }

  // Use Default

  .use-default {
    background-image: linear-gradient(
      -180deg,
      @btn-default-bg-start,
      @btn-default-bg-end
    );
    box-shadow: @btn-default-shadow;

    &:hover {
      background-image: linear-gradient(
        -180deg,
        @btn-default-hover-bg-start,
        @btn-default-hover-bg-end
      );
      box-shadow: @btn-default-hover-shadow;
    }
  }
  .arrowColorMixin(use-default,
    @btn-default-hover-bg-start,
    @btn-default-hover-bg-end,
    @btn-default-hover-shadow-arrow,
    @btn-default-bg-start,
    @btn-default-bg-end,
    @btn-default-shadow-arrow,
    @btn-default-bg,
    @border-color-gray-dark);

  .focusMixin(use-default);

  .use-default:active,
  .use-default.active {
    background: @btn-default-active-bg;
    box-shadow: @btn-default-active-shadow;

    .arrow {
      background: @btn-default-active-bg;
      box-shadow: @btn-default-active-shadow-arrow;
    }
  }

  //.fallbackMixin(use-default; @btn-default-bg; @border-color-gray-dark);

  // Use Primary

  .use-primary {
    background-image: linear-gradient(
      @btn-primary-bg-start,
      @btn-primary-bg-end
    );
    box-shadow: @btn-primary-shadow;
    color: #fff;

    &:hover {
      background-image: linear-gradient(
        @btn-primary-hover-bg-start,
        @btn-primary-hover-bg-end
      );
      box-shadow: @btn-primary-hover-shadow;
    }
  }
  .arrowColorMixin(use-primary,
     @btn-primary-hover-bg-start,
     @btn-primary-hover-bg-end,
     @btn-primary-hover-shadow-arrow,
     @btn-primary-bg-start,
     @btn-primary-bg-end,
     @btn-primary-shadow-arrow,
     @btn-primary-bg);

  .focusMixin(use-primary);

  .use-primary:active,
  .use-primary.active {
    background: @btn-primary-active-bg;
    box-shadow: @btn-primary-active-shadow;

    .arrow {
      background: @btn-primary-active-bg;
      box-shadow: @btn-primary-active-shadow-arrow;
    }
  }

  //.fallbackMixin(use-primary, @btn-primary-bg);

  // Use Success

  .use-success {
    background-image: linear-gradient(
      @btn-success-bg-start,
      @btn-success-bg-end
    );
    box-shadow: @btn-success-shadow;
    color: #fff;

    &:hover {
      background-image: linear-gradient(
        @btn-success-hover-bg-start,
        @btn-success-hover-bg-end
      );
      box-shadow: @btn-success-hover-shadow;
    }
  }
  .arrowColorMixin(use-success,
    @btn-success-hover-bg-start,
    @btn-success-hover-bg-end,
    @btn-success-hover-shadow-arrow,
    @btn-success-bg-start,
    @btn-success-bg-end,
    @btn-success-shadow-arrow,
    @btn-success-bg);

  .focusMixin(use-success);

  .use-success:active,
  .use-success.active {
    background: @btn-success-active-bg;
    box-shadow: @btn-success-active-shadow;

    .arrow {
      background: @btn-success-active-bg;
      box-shadow: @btn-success-active-shadow-arrow;
    }
  }

  //.fallbackMixin(use-success, @btn-success-bg);

  // Use Danger

  .use-danger {
    background-image: linear-gradient(
      @btn-danger-bg-start,
      @btn-danger-bg-end
    );
    box-shadow: @btn-danger-shadow;
    color: #fff;

    &:hover {
      background-image: linear-gradient(
        @btn-danger-hover-bg-start,
        @btn-danger-hover-bg-end
      );
      box-shadow: @btn-danger-hover-shadow;
    }
  }
  .arrowColorMixin(use-danger,
    @btn-danger-hover-bg-start,
    @btn-danger-hover-bg-end,
    @btn-danger-hover-shadow-arrow,
    @btn-danger-bg-start,
    @btn-danger-bg-end,
    @btn-danger-shadow-arrow,
    @btn-danger-bg);

  .focusMixin(use-danger);

  .use-danger:active,
  .use-danger.active {
    //background: #cd381b;
    //border-color: #853333 #b24c4c #b24c4c;
    //box-shadow: inset 0 2px 1px -1px #9e2b15;

    background: @btn-danger-active-bg;
    box-shadow: @btn-danger-active-shadow;

    .arrow {
      background: @btn-danger-active-bg;
      box-shadow: @btn-danger-active-shadow-arrow;
    }
  }

  //.fallbackMixin(use-danger, @btn-danger-bg);

  // Use Pay

  .use-pay {
    background-image: linear-gradient(
      @btn-pay-bg-start,
      @btn-pay-bg-end
    );
    box-shadow: @btn-pay-shadow;

    &:hover {
      background-image: linear-gradient(
        @btn-pay-hover-bg-start,
        @btn-pay-hover-bg-end
      );
      box-shadow: @btn-pay-hover-shadow;
    }
  }
  .arrowColorMixin(use-pay,
    @btn-pay-hover-bg-start,
    @btn-pay-hover-bg-end,
    @btn-pay-hover-shadow-arrow,
    @btn-pay-bg-start,
    @btn-pay-bg-end,
    @btn-pay-shadow-arrow,
    @btn-pay-bg);

  .focusMixin(use-pay);

  .use-pay:active,
  .use-pay.active {
    background: @btn-pay-active-bg;
    box-shadow: @btn-pay-active-shadow;

    .arrow {
      background: @btn-pay-active-bg;
      box-shadow: @btn-pay-active-shadow-arrow;
    }
  }

  //.fallbackMixin(use-pay, @btn-pay-bg);

  // End Use

  .root.checked {
    background: #737373;
    box-shadow:
      0 0 0 1px rgba(0, 0, 0, .6),
      inset 0 1px 2px 0 rgba(0, 0, 0, .3);
    color: #fff;
  }

  .focusMixin(checked);
  .fallbackMixin(checked, #737373);

  .root.disabled {
    background: @bg-disabled;
    box-shadow: 0 0 0 1px @border-color-gray-light;
    color: #808080;
    cursor: default;

    .arrow,
    .arrowLoading {
      background: @bg-disabled;
      box-shadow: 1px -1px 0 0 @border-color-gray-light;
    }
  }

  .loading {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    overflow: hidden;
  }

  .arrowLoading {
    overflow: hidden;
  }
  .loading:before {
    content: '';
    height: 100%;
    position: absolute;
    opacity: .3;
    background: linear-gradient(-120deg, transparent 33%, #ccc 0, #ccc 66%, transparent 0);
    background-size: 50px 100%;
    top: 0;
    left: 0;
    right: -50px;
    :global {
      animation: btn_loading 1.4s linear infinite;
    }
    transform: rotateY(180deg) skewX(0deg) skewY(0deg);
  }

  //.arrowLoading:before {
  //
  //}

  .warning,
  .error {
    border-radius: inherit;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }

  .warning {
    box-shadow: 0 0 0 2px @border-color-warning;
  }

  .error {
    box-shadow: 0 0 0 2px @border-color-error;
  }

  :global(.rt-ie8) {
    .warning {
      outline: 2px solid @border-color-warning;
    }

    .error {
      outline: 2px solid @border-color-error;
    }
  }

  .narrow {
    padding-left: 5px;
    padding-right: 5px;
  }

  .noPadding {
    padding-left: 0;
    padding-right: 0;
  }

  .noRightPadding {
    padding-right: 0;
  }
}

@keyframes btn_loading {
  0% {
    transform: translateX(0) rotateY(180deg);
  }
  100% {
    transform: translateX(-50px) rotateY(180deg);
  }
}

@keyframes btn_loading_arrow {
  0% {
    transform: translateX(56px) rotate(-45.4deg) skewX(0deg) skewY(0deg);
  }
  100% {
    transform: translateX(8px) translateY(50px) rotate(-45.4deg) skewX(0deg) skewY(0deg);
  }
}
