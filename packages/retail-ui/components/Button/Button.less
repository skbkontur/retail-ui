@import '../variables.less';
@import (reference) '../Link/Link.less';
@import './Button.common.less';

:local {
  .commonStyles();

  @focus-shadow: 0 0 0 1px @border-color-focus, inset 0 0 0 1px @border-color-gray-lighter;

  .wrap {
    padding: 1px;

    &_link {
      padding: 0;
    }
  }

  .wrap_arrow {
    margin-right: 10px;
  }

  .wrap_arrow_left {
    margin-right: 0;
    margin-left: 10px;
  }

  .buttonSizeMixin(
  @className,
  @length,
  @top,
  @right,
  @left,
  @shift,
  @transform,
  @arrow_loading,
  @arrow_loading_top,
  @arrow_left_loading_top,
  @arrow_left_loading_left,
  @arrow_loading_height
) {
    .@{className} {
      .arrow {
        position: absolute;
        top: @top;
        right: @right;
        height: @length;
        width: @length;
        transform: @transform;
        border-radius: 2px 2px 2px 16px;
        box-sizing: border-box;
        z-index: 1;
      }

      .arrow_left {
        left: @left;
        transform: rotate(232deg) skewX(25deg) skewY(8deg);
      }

      .arrow.arrow_loading {
        overflow: hidden;

        &::before {
          background: @arrow_loading;
          content: '';
          height: @arrow_loading_height;
          position: absolute;
          opacity: 0.2;
          background-size: 41px 100%;
          top: @arrow_loading_top;
          left: -207px;
          right: -72px;
          transform: rotate(-47deg) skewX(0deg) skewY(0deg);

          :global {
            animation: btn_loading_arrow 1s linear infinite;
          }
        }
      }

      .arrow_left.arrow_loading {
        &::before {
          :global {
            animation: btn_loading_arrow 1s linear infinite;
            animation-direction: reverse;
            left: @arrow_left_loading_left;
            top: @arrow_left_loading_top;
          }
        }
      }
    }
  }

  .buttonColorMixin(
  @className,
  @hoverColorStart,
  @hoverColorEnd,
  @hoverShadow,
  @hoverShadowArrow,
  @hoverShadowArrowLeft,
  @activeColor,
  @activeShadow,
  @activeShadowArrow,
  @activeShadowArrowLeft,
  @colorStart,
  @colorEnd,
  @shadow,
  @shadowArrow,
  @shadowArrowLeft,
  @bg,
  @color,
  @border: @bg
) {
    .@{className} {
      background-image: linear-gradient(@colorStart, @colorEnd);
      color: @color;
      box-shadow: @shadow;

      .arrow {
        background-image: linear-gradient(to bottom right, @colorStart, @colorEnd);
        box-shadow: @shadowArrow;
      }

      .arrow_left {
        background-image: linear-gradient(to top left, @colorStart, @colorEnd);
        box-shadow: @shadowArrowLeft;
      }

      .arrow.arrow_warning {
        box-shadow: 2px -2px 0 0 @border-color-warning;
      }

      .arrow.arrow_error {
        box-shadow: 2px -2px 0 0 @border-color-error;
      }

      &:hover {
        background-image: linear-gradient(@hoverColorStart, @hoverColorEnd);
        box-shadow: @hoverShadow;

        .arrow {
          background-image: linear-gradient(to bottom right, @hoverColorStart, @hoverColorEnd);
          box-shadow: @hoverShadowArrow;
        }

        .arrow_left {
          background-image: linear-gradient(to top left, @hoverColorStart, @hoverColorEnd);
          box-shadow: @hoverShadowArrowLeft;
        }

        .arrow.arrow_warning {
          box-shadow: 2px -2px 0 0 @border-color-warning;
        }

        .arrow.arrow_error {
          box-shadow: 2px -2px 0 0 @border-color-error;
        }
      }

      &.focus {
        box-shadow: inset 0 0 0 1px #fff, 0 0 0 2px @border-color-focus;
        position: relative;
        z-index: 2;

        .arrow {
          box-shadow: inset -1px 1px 0 0 #fff, 2px -2px 0 0 @border-color-focus;
        }

        .arrow.arrow_warning {
          box-shadow: inset -1px 1px 0 0 #fff, 2px -2px 0 0 @border-color-warning;
        }

        .arrow.arrow_error {
          box-shadow: inset -1px 1px 0 0 #fff, 2px -2px 0 0 @border-color-error;
        }
      }
    }

    .@{className}:active,
    .@{className}.active {
      background: @activeColor;
      box-shadow: @activeShadow;

      .arrow {
        background: @activeColor;
        box-shadow: @activeShadowArrow;
      }

      .arrow_left {
        box-shadow: @activeShadowArrowLeft;
      }

      .arrow.arrow_warning {
        box-shadow: 2px -2px 0 0 @border-color-warning;
      }

      .arrow.arrow_error {
        box-shadow: 2px -2px 0 0 @border-color-error;
      }
    }
  }

  .sizeSmall {
    &:not(.link) {
      height: @control-height-small - 2;
    }
  }
  .buttonSizeMixin(
    sizeSmall,
    16.8px,
    7.5px,
    -7.5px,
    -9.6px,
    -7.7px,
    rotate(53deg) skewX(24deg) skewY(10deg),
    linear-gradient(-56deg, transparent 47.5%, #ccc 0, #ccc 73.5%, transparent 0),
    7px,
    7px,
    -207px,
    441%
  );

  .sizeMedium {
    &:not(.link) {
      height: @control-height-medium - 2;
    }
  }
  .buttonSizeMixin(
    sizeMedium,
    20.2px,
    9px,
    -10.2px,
    -9.6px,
    -9.5px,
    rotate(53deg) skewX(24deg) skewY(8deg),
    linear-gradient(-56deg, transparent 46.9%, #ccc 0, #ccc 69.5%, transparent 0),
    0,
    0,
    -208px,
    441%
  );

  .DEPRECATED_sizeMedium {
    font-size: 14px;

    &:not(.link) {
      height: @control-height-medium - 2;
    }
  }
  .buttonSizeMixin(
    DEPRECATED_sizeMedium,
    20.2px,
    9px,
    -10.2px,
    -9.6px,
    -9.5px,
    rotate(53deg) skewX(24deg) skewY(8deg),
    linear-gradient(-56deg, transparent 46.9%, #ccc 0, #ccc 69.5%, transparent 0),
    0,
    0,
    -208px,
    441%
  );

  .sizeLarge {
    &:not(.link) {
      height: @control-height-large - 2;
    }
  }
  .buttonSizeMixin(
    sizeLarge,
    21.7px,
    10.2px,
    -10.8px,
    -10.6px,
    -10.2px,
    rotate(53deg) skewX(25deg) skewY(10deg),
    linear-gradient(-56deg, transparent 48.2%, #ccc 0, #ccc 63.4%, transparent 0),
    -32px,
    -36px,
    -198px,
    700%
  );

  // Use Default
  .buttonColorMixin(
    default,
    @btn-default-hover-bg-start,
    @btn-default-hover-bg-end,
    @btn-default-hover-shadow,
    @btn-default-hover-shadow-arrow,
    @btn-default-hover-shadow-arrow-left,
    @btn-default-active-bg,
    @btn-default-active-shadow,
    @btn-default-active-shadow-arrow,
    @btn-default-active-shadow-arrow-left,
    @btn-default-bg-start,
    @btn-default-bg-end,
    @btn-default-shadow,
    @btn-default-shadow-arrow,
    @btn-default-shadow-arrow-left,
    @btn-default-bg,
    none,
    @border-color-gray-dark
  );
  // Use Primary
  .buttonColorMixin(
    primary,
    @btn-primary-hover-bg-start,
    @btn-primary-hover-bg-end,
    @btn-primary-hover-shadow,
    @btn-primary-hover-shadow-arrow,
    @btn-primary-hover-shadow-arrow-left,
    @btn-primary-active-bg,
    @btn-primary-active-shadow,
    @btn-primary-active-shadow-arrow,
    @btn-primary-active-shadow-arrow-left,
    @btn-primary-bg-start,
    @btn-primary-bg-end,
    @btn-primary-shadow,
    @btn-primary-shadow-arrow,
    @btn-primary-shadow-arrow-left,
    @btn-primary-bg,
    #fff
  );
  // Use Success
  .buttonColorMixin(
    success,
    @btn-success-hover-bg-start,
    @btn-success-hover-bg-end,
    @btn-success-hover-shadow,
    @btn-success-hover-shadow-arrow,
    @btn-success-hover-shadow-arrow-left,
    @btn-success-active-bg,
    @btn-success-active-shadow,
    @btn-success-active-shadow-arrow,
    @btn-success-active-shadow-arrow-left,
    @btn-success-bg-start,
    @btn-success-bg-end,
    @btn-success-shadow,
    @btn-success-shadow-arrow,
    @btn-success-shadow-arrow-left,
    @btn-success-bg,
    #fff
  );
  // Use Danger
  .buttonColorMixin(
    danger,
    @btn-danger-hover-bg-start,
    @btn-danger-hover-bg-end,
    @btn-danger-hover-shadow,
    @btn-danger-hover-shadow-arrow,
    @btn-danger-hover-shadow-arrow-left,
    @btn-danger-active-bg,
    @btn-danger-active-shadow,
    @btn-danger-active-shadow-arrow,
    @btn-danger-active-shadow-arrow-left,
    @btn-danger-bg-start,
    @btn-danger-bg-end,
    @btn-danger-shadow,
    @btn-danger-shadow-arrow,
    @btn-danger-shadow-arrow-left,
    @btn-danger-bg,
    #fff
  );
  // Use Pay
  .buttonColorMixin(
    pay,
    @btn-pay-hover-bg-start,
    @btn-pay-hover-bg-end,
    @btn-pay-hover-shadow,
    @btn-pay-hover-shadow-arrow,
    @btn-pay-hover-shadow-arrow-left,
    @btn-pay-active-bg,
    @btn-pay-active-shadow,
    @btn-pay-active-shadow-arrow,
    @btn-pay-active-shadow-arrow-left,
    @btn-pay-bg-start,
    @btn-pay-bg-end,
    @btn-pay-shadow,
    @btn-pay-shadow-arrow,
    @btn-pay-shadow-arrow-left,
    @btn-pay-bg,
    none
  );

  // End Use
  .root.checked {
    background: @btn-checked-bg;
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.6), inset 0 1px 2px 0 rgba(0, 0, 0, 0.3);
    color: #fff;

    .arrow {
      background: @btn-checked-bg;
      box-shadow: @btn-shadow-checked-arrow;
    }

    .arrow_left {
      box-shadow: @btn-shadow-checked-arrow-left;
    }

    .arrow.arrow_error {
      box-shadow: inset 0 4px 2px -3px rgba(0, 0, 0, 0.3), 2px -2px 0 0 @border-color-error;
    }

    .arrow.arrow_warning {
      box-shadow: inset 0 4px 2px -3px rgba(0, 0, 0, 0.3), 2px -2px 0 0 @border-color-warning;
    }

    &:hover {
      background: @btn-checked-bg;
    }

    &.focus {
      box-shadow: inset 0 0 0 1px #fff, 0 0 0 2px @border-color-focus;
      position: relative;
      z-index: 2;

      .arrow {
        box-shadow: inset -1px 1px 0 0 #fff, 2px -2px 0 0 @border-color-focus;
      }

      .arrow.arrow_warning {
        box-shadow: inset -1px 1px 0 0 #fff, 2px -2px 0 0 @border-color-warning;
      }

      .arrow.arrow_error {
        box-shadow: inset -1px 1px 0 0 #fff, 2px -2px 0 0 @border-color-error;
      }
    }
  }

  .root.disabled {
    box-shadow: 0 0 0 1px @border-color-gray-light;

    .arrow {
      background: @bg-disabled;
      box-shadow: 1px -1px 0 0 @border-color-gray-light;
    }

    .arrow.arrow_warning {
      box-shadow: 2px -2px 0 0 @border-color-warning;
    }

    .arrow.arrow_error {
      box-shadow: 2px -2px 0 0 @border-color-error;
    }
  }

  .borderless {
    box-shadow: none;

    &:hover,
    &:active {
      box-shadow: none;
    }
  }
}
