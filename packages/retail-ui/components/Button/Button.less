@import (reference) '../mixins.less';
@import (reference) '../Link/Link.less';
@import './Button.mixins.less';

:local {
  .root {
    .reset-button();
    .reset-text();

    border: 0;
    cursor: pointer;
    display: inline-block;
    text-align: center;
    margin: 0; /* Need for Safari. */
    outline: 0;
    overflow: visible; /* On IE it's hidden by default. */
    position: relative;
    width: 100%;
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    background-clip: border-box;

    &::-moz-focus-inner {
      border: 0;
      padding: 0;
    }

    &:active,
    &.active,
    &.checked {
      &:not(.link):not(.disabled) {
        .caption {
          transform: translateY(1px);
        }
      }
    }

    &::after {
      content: '';
      display: inline-block;
      vertical-align: baseline;
      width: 0;
    }

    &:not(.link) {
      :global(.rt-ie-any) & {
        line-height: normal;
      }
    }

    .warning,
    .error {
      border-radius: inherit;
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
    }

    .arrow {
      position: absolute;
      border-radius: 2px 2px 2px 16px;
      box-sizing: border-box;
      z-index: 1;

      &.arrow_loading {
        overflow: hidden;

        &::before {
          background: linear-gradient(-56deg, transparent 47.5%, #ccc 0, #ccc 73.5%, transparent 0);
          background-size: 41px 100%;
          content: '';
          display: block;
          position: absolute;
          opacity: 0.2;
          left: -207px;
          right: -72px;
          transform: rotate(-47deg) skewX(0deg) skewY(0deg);

          :global {
            animation: btn_loading_arrow 1s linear infinite;
          }
        }
      }
    }

    .arrow_left {
      transform: rotate(232deg) skewX(25deg) skewY(8deg) !important; /* to override `.arrow` dynamic styles */

      &.arrow_loading {
        &::before {
          :global {
            animation: btn_loading_arrow 1s linear infinite;
            animation-direction: reverse;
          }
        }
      }
    }

    .default,
    .arrow_warning,
    .arrow_error {
      visibility: visible;
    }

    .caption {
      position: relative;
      white-space: nowrap;
      display: inline-block;
      width: 100%;
      vertical-align: top;
    }

    .icon {
      display: inline-block;
      padding-right: 7px;
    }

    &.focus {
      position: relative;
      z-index: 2;

      &:not(.disabled):not(.loading):not(.link) {
        border: none;
      }

      &.errorRoot,
      &.warningRoot {
        border-color: transparent !important;
      }
    }

    &.checked {
      box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.6), inset 0 1px 2px 0 rgba(0, 0, 0, 0.3);

      &:not(.focus):hover {
        box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.6), inset 0 1px 2px 0 rgba(0, 0, 0, 0.3);
      }

      &.focus {
        position: relative;
        z-index: 2;

        &.errorRoot,
        &.warningRoot {
          border-color: transparent !important;
        }
      }
    }

    &.disabled {
      border-color: transparent;
      box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.15);

      .arrow {
        background: #f2f2f2;
      }
    }
  }

  // size Small
  .buttonArrowMixin(sizeSmall, 7.5px, -9.6px, -7.5px, 16.8px, rotate(53deg) skewX(24deg) skewY(10deg));
  .buttonLoadingArrowMixin(sizeSmall, 7px, 7px, -207px, 441%);

  .sizeSmall {
    font-size: 14px;
  }

  // size Medium
  .buttonArrowMixin(sizeMedium, 9px, -9.6px, -10.2px, 20.2px, rotate(53deg) skewX(24deg) skewY(8deg));
  .buttonLoadingArrowMixin(sizeMedium, 0, 0, -208px, 441%);

  .sizeMedium {
    font-size: 16px;

    .arrow.arrow_loading {
      &::before {
        background: linear-gradient(-56deg, transparent 46.9%, #ccc 0, #ccc 69.5%, transparent 0);
      }
    }
  }

  // size Large
  .buttonArrowMixin(sizeLarge, 10.2px, -10.6px, -10.8px, 21.7px, rotate(53deg) skewX(25deg) skewY(10deg));
  .buttonLoadingArrowMixin(sizeLarge, -32px, -36px, -198px, 700%);

  .sizeLarge {
    font-size: 16px;

    .arrow.arrow_loading {
      &::before {
        background: linear-gradient(-56deg, transparent 48.2%, #ccc 0, #ccc 63.4%, transparent 0);
      }
    }
  }

  .buttonWithIcon {
    padding-right: 15px;
    padding-left: 15px;
  }

  .linkMixin(link);

  /*
 * common styles with
 * increased specificity
 */

  .wrap {
    box-sizing: border-box;
    display: inline-block;
    padding: 1px;

    &_link {
      padding: 0;
    }

    &_arrow {
      margin-right: 10px;

      &_left {
        margin-right: 0;
        margin-left: 10px;
      }
    }

    .root {
      &.disabled {
        color: #808080;
        cursor: default;
        pointer-events: none;

        &:not(.link) {
          background: #f2f2f2;
        }

        :global(.rt-ie-any) & {
          outline-color: transparent;
        }
      }

      &.link {
        display: inline;
        padding: 0;
        margin: 0;
        background: none;
        border: none;
        box-shadow: none;
        line-height: inherit;

        .caption {
          display: inline;
        }

        .icon {
          padding-right: @linkIconPadding;
        }

        .warning,
        .error {
          left: -2px;
          right: -2px;
          bottom: -2px;
        }
      }
    }

    .narrow {
      padding-left: 5px !important; /* to override dynamic styles */
      padding-right: 5px !important; /* to override dynamic styles */
    }

    .noPadding {
      padding-left: 0 !important; /* to override dynamic styles */
      padding-right: 0 !important; /* to override dynamic styles */
    }

    .noRightPadding {
      padding-right: 0 !important; /* to override dynamic styles */
    }
  }

  .loading {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    border-radius: inherit;
    overflow: hidden;
  }

  .loading::before {
    content: '';
    height: 100%;
    position: absolute;
    opacity: 0.2;
    background: linear-gradient(-110deg, #ccc 30%, transparent 0, transparent 60%, #ccc 0);
    background-size: 30px 100%;
    top: 0;
    left: 0;
    right: -30px;

    :global {
      animation: btn_loading 1s linear infinite;
    }

    transform: rotateY(180deg) skewX(0deg) skewY(0deg);
  }

  .borderless:not(.focus):not(.disabled):not(.active):not(.checked) {
    box-shadow: none !important; /* to override dynamic styles */

    &:hover,
    &:active {
      box-shadow: none !important; /* to override dynamic style */
    }
  }
}
