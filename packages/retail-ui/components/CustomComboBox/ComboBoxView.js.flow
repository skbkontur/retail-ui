/* @flow */
import Input from '../Input';
import Menu from '../Menu/Menu';
import type { MenuItemState } from '../MenuItem';
import InputLikeText from '../internal/InputLikeText';

type ComboBoxViewProps<T> = {|
  align?: 'left' | 'center' | 'right',
  autoFocus?: boolean,
  borderless?: boolean,
  disablePortal?: boolean,
  disabled?: boolean,
  editing?: boolean,
  error?: boolean,
  items?: ?T[],
  loading?: boolean,
  menuAlign?: 'left' | 'right',
  opened?: boolean,
  openButton?: boolean,
  placeholder?: string,
  size?: 'small' | 'medium' | 'large',
  textValue?: string,
  totalCount?: number,
  value?: ?T,
  warning?: boolean,
  width?: string | number,
  maxLength?: number,
  maxMenuHeight?: number | string,
  onChange?: (item: T, e: SyntheticEvent<HTMLElement>) => void,
  onClickOutside?: () => void,
  onFocus?: () => void,
  onFocusOutside?: () => void,
  onInputBlur?: () => void,
  onInputChange?: (event: SyntheticInputEvent<HTMLInputElement>, value: string) => void,
  onInputFocus?: () => void,
  onInputClick?: () => void,
  onInputKeyDown?: (e: SyntheticKeyboardEvent<HTMLElement>) => void,
  onMouseEnter?: (e: SyntheticMouseEvent<HTMLElement>) => void,
  onMouseOver?: (e: SyntheticMouseEvent<HTMLElement>) => void,
  onMouseLeave?: (e: SyntheticMouseEvent<HTMLElement>) => void,
  renderItem?: (item: T, state: MenuItemState) => React$Node,
  renderNotFound?: () => React$Node,
  renderTotalCount?: (found: number, total: number) => React$Node,
  renderValue?: (item: T) => React$Node,
  refInput?: (input: ?Input) => void,
  refMenu?: (menu: ?Menu) => void,
  refInputLikeText?: (inputLikeText: ?InputLikeText) => void
|};

declare class ComboBoxView<T> extends React$Component<ComboBoxViewProps<T>> {}

export default ComboBoxView;
