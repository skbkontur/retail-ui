/* @flow */
import type { CalendarDateShape } from '../Calendar/CalendarDateShape';

declare export var DateInputConfig: {|
  polyfillInput: boolean,
|};

declare export var DateParts: {|
  Date: number,
  Month: number,
  Year: number,
  All: number,
|};

export type DateInputState = {|
  selected: number | null,
  editingCharIndex: number,
  date: string | null,
  month: string | null,
  year: string | null,
  minDate: ?CalendarDateShape,
  maxDate: ?CalendarDateShape,
  notify: boolean,
|};

export type DateInputProps = {|
  value?: string,
  error?: boolean,
  warning?: boolean,
  disabled?: boolean,
  minDate?: ?string,
  maxDate?: ?string,
  width?: string | number,
  withIcon?: boolean,
  size?: 'small' | 'large' | 'medium',
  onBlur?: (x0: SyntheticFocusEvent<HTMLElement>) => void,
  onFocus?: (x0: SyntheticFocusEvent<HTMLElement>) => void,
  onChange?: (
    x0: {|
      target: {|
        value: string,
      |},
    |},
    x1: string,
  ) => void,
  onKeyDown?: (x0: SyntheticKeyboardEvent<HTMLElement>) => void,
|};

export type DateInputSetStateCallBack = (
  prevState: $ReadOnly<DateInputState>,
  props?: DateInputProps,
) => DateInputState | null;

declare class DateInput extends React$Component<DateInputProps, DateInputState> {
  blur(): void,
  focus(): void,
  blink(): void,
}

export default DateInput;
