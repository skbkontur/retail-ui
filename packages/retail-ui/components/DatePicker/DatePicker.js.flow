/* @flow */

export type DatePickerProps<T> = {|
  autoFocus?: boolean,
  disabled?: boolean,
  enableTodayLink?: boolean,
  error?: boolean,
  minDate?: T,
  maxDate?: T,
  menuAlign?: 'left' | 'right',
  size?: 'small' | 'medium' | 'large',
  value: T | null,
  warning?: boolean,
  width?: number | string,
  onBlur?: () => void,
  onChange: (e: {|
    target: {|
      value: T,
    |},
  |}, v: T) => void,
  onFocus?: () => void,
  /* eslint-disable flowtype/no-weak-types */
  onKeyDown?: (e: SyntheticKeyboardEvent<any>) => void,
  onMouseEnter?: (e: SyntheticMouseEvent<any>) => void,
  onMouseLeave?: (e: SyntheticMouseEvent<any>) => void,
  onMouseOver?: (e: SyntheticMouseEvent<any>) => void,
  /* eslint-enable flowtype/no-weak-types */
  isHoliday?: (day: T, isWeekend: boolean) => boolean,
|};

export type DatePickerState = {|
  opened: boolean,
|};

declare type DatePickerValue = string;

declare class DatePicker extends React$Component<DatePickerProps<DatePickerValue>, DatePickerState> {
  static validate: (value: string | null | void) => boolean,

  blur(): void,
  focus(): void,
  close(): void,
}

export default DatePicker;
