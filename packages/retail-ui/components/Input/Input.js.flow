/* @flow */
import type { MouseEventHandler } from '../eventHandlers';

export type InputSize = 'small' | 'medium' | 'large';
export type InputAlign = 'left' | 'center' | 'right';
export type InputType = 'password' | 'text';
export type IconType = React$Node | (() => React$Node);

export type InputProps = {
  leftIcon?: IconType,
  rightIcon?: IconType,
  error?: boolean,
  warning?: boolean,
  borderless?: boolean,
  align?: InputAlign,
  mask?: ?string,
  maskChar?: ?string,
  formatChars?: {
    [key: string]: string,
  },
  alwaysShowMask?: boolean,
  size?: InputSize,
  onChange?: (event: SyntheticKeyboardEvent<HTMLInputElement>, value: string) => void,
  onMouseEnter?: MouseEventHandler<HTMLLabelElement>,
  onMouseLeave?: MouseEventHandler<HTMLLabelElement>,
  onMouseOver?: MouseEventHandler<HTMLLabelElement>,
  type?: InputType,
  value?: string,
  capture?: boolean,
  prefix?: React$Node,
  suffix?: React$Node,
  mainInGroup?: boolean,
  selectAllOnFocus?: boolean,
  onUnexpectedInput?: () => void,
};

export type InputVisibilityState = {|
  blinking: boolean,
  focused: boolean,
|};

export type InputState = {|
  ...$Exact<InputVisibilityState>,
  polyfillPlaceholder: boolean,
|};

declare class Input extends React$Component<InputProps, InputState> {
  focus(): void;
  blur(): void;
  blink(): void;
  setSelectionRange(start: number, end: number): void;
  selectAll: () => void;
}

export default Input;
