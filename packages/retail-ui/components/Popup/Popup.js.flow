/* @flow */
export type PopupPosition =
  | 'top left'
  | 'top center'
  | 'top right'
  | 'right top'
  | 'right middle'
  | 'right bottom'
  | 'bottom left'
  | 'bottom center'
  | 'bottom right'
  | 'left top'
  | 'left middle'
  | 'left bottom';

declare export var PopupPositions: PopupPosition[];

export type PopupHandlerProps = {|
  onMouseEnter?: (event: SyntheticMouseEvent<HTMLElement> | MouseEvent) => void,
  onMouseLeave?: (event: SyntheticMouseEvent<HTMLElement> | MouseEvent) => void,
  onClick?: (event: SyntheticMouseEvent<HTMLElement> | MouseEvent) => void,
  onFocus?: (event: SyntheticFocusEvent<HTMLElement> | FocusEvent) => void,
  onBlur?: (event: SyntheticFocusEvent<HTMLElement> | FocusEvent) => void,
  onOpen?: () => void,
|};

export type PopupProps = {|
  ...$Exact<PopupHandlerProps>,
  anchorElement: React$Node | HTMLElement,
  backgroundColor?: string,
  borderColor?: string,
  children: React$Node | (() => React$Node),
  hasPin: boolean,
  hasShadow: boolean,
  disableAnimations: boolean,
  margin: number,
  maxWidth: number | string,
  opened: boolean,
  pinOffset: number,
  pinSize: number,
  popupOffset: number,
  positions: string[],
  onCloseRequest?: () => void,
|};

type PopupLocation = {|
  coordinates: {|
    left: number,
    top: number,
  |},
  position: string,
|};

export type PopupState = {|
  location: ?PopupLocation,
|};

declare class Popup extends React$Component<PopupProps, PopupState> {}

export default Popup;
