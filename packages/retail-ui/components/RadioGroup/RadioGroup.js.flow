/* @flow */
import * as CSS from 'csstype';

import Prevent from './Prevent';
import type { SyntheticRadioEvent } from '../Radio';

export type ItemType<T> = T | [T, React$Node];

export type RadioGroupProps<T> = {|
  defaultValue?: T,
  value?: T,
  items?: Array<ItemType<T>>,
  name?: string,
  disabled?: boolean,
  warning?: boolean,
  error?: boolean,
  inline?: boolean,
  children?: React$Node,
  width?: CSS.WidthProperty<string | number>,
  renderItem?: (itemValue: T, data: React$Node) => React$Node,
  /* eslint-disable flowtype/no-weak-types */
  onChange?: (event: SyntheticRadioEvent<T>, value: T) => any,
  onMouseLeave?: () => any,
  onMouseOver?: () => any,
  onMouseEnter?: () => any,
  /* eslint-enable flowtype/no-weak-types */
|};

export type RadioGroupState<T> = {|
  activeItem?: T,
|};

declare class RadioGroup<T> extends React$Component<RadioGroupProps<T>, RadioGroupState<T>> {
  static Prevent: typeof Prevent,

  focus(): void,
}

export default RadioGroup;

// eslint-disable-next-line flowtype/no-weak-types
declare function renderItem(_value: any, data: React$Node): React$Node;
