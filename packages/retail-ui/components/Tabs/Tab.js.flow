/* @flow */
import * as CSS from 'csstype';

export type TabIndicators = {|
  error: boolean,
  warning: boolean,
  success: boolean,
  primary: boolean,
  disabled: boolean,
|};

export type TabProps = {|
  children?: React$Node,
  // eslint-disable-next-line flowtype/no-weak-types
  component?: React$ComponentType<any> | string,
  href?: string,
  id?: string,
  onClick?: (event: SyntheticMouseEvent<HTMLElement>) => void,
  onKeyDown?: (event: SyntheticKeyboardEvent<HTMLElement>) => void,
  disabled?: boolean,
  error?: boolean,
  warning?: boolean,
  success?: boolean,
  primary?: boolean,
  style?: CSS.Properties<string | number>,
|};

export type TabContext = {|
  activeTab: string,
  // eslint-disable-next-line flowtype/no-weak-types
  addTab: (id: string, getNode: () => any) => void,
  notifyUpdate: () => void,
  removeTab: (id: string) => void,
  shiftFocus: (fromTab: string, delta: number) => void,
  switchTab: (id: string) => void,
  vertical: boolean,
|};

export type TabState = {|
  focusedByKeyboard: boolean,
|};

declare class Tab extends React$Component<TabProps, TabState> {
  // eslint-disable-next-line flowtype/no-weak-types
  getUnderlyingNode: () => ?React$Element<any>,
}

export default Tab;
